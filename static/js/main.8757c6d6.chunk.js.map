{"version":3,"sources":["Note.ts","Keyboard.ts","Instrument.ts","Chord.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Key","noteToNumber","note","key","C","octave","CSharp","D","DSharp","E","F","FSharp","G","GSharp","A","ASharp","B","noteFromNumber","noteNumber","Math","floor","noteToString","toUpperCase","keyMaps","firstNote","keys","keyboardEventToNote","event","transposee","repeat","keyMap","find","km","includes","index","indexOf","n","instruments","defaultInstrument","detectOnce","notes","noteNumbers","map","baseNoteNumber","min","baseNote","structure","Array","fill","_","idx","filter","distance","some","estimated","Object","patterns","label","score","estimate","reduce","x","y","m","aug","dim","sus2","sus4","M7","m7","mM7","dim7","Ã¸7","M9","m9","M11","m11","M13","m13","chord","allFormElements","k","length","player","createHandleTranspose","setTranspose","Number","target","value","Boolean","window","location","hostname","match","ReactDOM","render","useState","logs","setLogs","playingNotesMap","setPlayingNotesMap","instrument","setInstrument","release","setRelease","transpose","handleKeyDown","useCallback","async","console","log","playingNote","splice","play","undefined","stop","createHandleKeyDown","handleKeyUp","playingNotes","forEach","pn","createHandleKeyUp","handleSelect","createHandleSelect","handleRelease","handleTranspose","handleActivate","instrumentName","AudioContext","onKeyDown","onKeyUp","tabIndex","onChange","defaultValue","split","s","substr","join","String","onClick","first","second","ceil","detect","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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ACA,kBACA,kBACA,eACA,cACA,aACA,eACA,oBACA,mBACA,UACA,YACA,cACA,aACA,kBACA,UACA,OACA,gBACA,kBACA,kBACA,eACA,iBACA,eACA,gBACA,oBACA,UACA,cACA,YACA,gBACA,OACA,UACA,gBACA,kBACA,oBACA,gBACA,aACA,kBACA,cACA,cACA,iBACA,aACA,cACA,YACA,mBACA,UACA,oBACA,WACA,aACA,iBACA,aACA,WACA,aACA,WACA,SACA,QACA,cACA,cACA,cACA,cACA,oBACA,oBACA,eACA,eACA,gBACA,gBACA,cACA,aACA,kBACA,kBACA,aACA,kBACA,iBACA,YACA,UACA,cACA,kBACA,WACA,UACA,OACA,gBACA,aACA,QACA,SACA,aACA,UACA,YACA,aAGWC,EAAoB,uB,8NClHjC,SAASC,EAAWC,GAClB,MAAMC,EAAcD,EAAME,IAAIN,GAAKnC,EAAamC,IAC1CO,EAAiBxB,KAAKyB,OAAOH,GAC7BI,EAAW5B,EAAe0B,GAC1BG,EAAYC,MAAM,IACrBC,KAAK,MACLN,IAAI,CAACO,EAAGC,IAASA,EAAM,GACvBC,OAAOC,GACCX,EAAYY,KAAKjB,IAAMA,EAAIO,GAAkB,KAAOS,IAGzDE,EAAaC,OAAO9B,KAAK+B,GAAwCd,IACrEvC,IAAG,CACDsD,MAAOtD,EACPuD,MAAOC,EAASb,EAAWU,EAASrD,OAIxC,O,yVAAO,CAAP,CACEA,IAAK0C,EAAS1C,KACXmD,EAAUM,OAAO,CAACC,EAAGC,IAAOD,EAAEH,OAASI,EAAEJ,MAAQG,EAAIC,IAO5D,MAAMN,EAAoC,CACxC,EAAK,CAAC,GACN,GAAI,CAAC,EAAG,GACRO,EAAG,CAAC,EAAG,GACPC,IAAK,CAAC,EAAG,GACTC,IAAK,CAAC,EAAG,GACTC,KAAM,CAAC,EAAG,GACVC,KAAM,CAAC,EAAG,GACVC,GAAI,CAAC,EAAG,EAAG,IACXC,GAAI,CAAC,EAAG,EAAG,IACX,EAAK,CAAC,EAAG,EAAG,IACZ,WAAO,CAAC,EAAG,EAAG,IACd,QAAS,CAAC,EAAG,EAAG,IAChBC,IAAK,C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","file":"static/js/main.8757c6d6.chunk.js","sourcesContent":["export interface Note {\r\n  key: Key;\r\n  octave: number;\r\n}\r\n\r\nexport enum Key {\r\n  C = \"C\",\r\n  CSharp = \"C#\",\r\n  D = \"D\",\r\n  DSharp = \"D#\",\r\n  E = \"E\",\r\n  F = \"F\",\r\n  FSharp = \"F#\",\r\n  G = \"G\",\r\n  GSharp = \"G#\",\r\n  A = \"A\",\r\n  ASharp = \"A#\",\r\n  B = \"B\",\r\n}\r\n\r\nexport function noteToNumber(note: Note): number {\r\n  // { key: C, octave: -1 } -> 0\r\n  switch (note.key) {\r\n    case Key.C:\r\n      return note.octave * 12 + 0 + 12;\r\n    case Key.CSharp:\r\n      return note.octave * 12 + 1 + 12;\r\n    case Key.D:\r\n      return note.octave * 12 + 2 + 12;\r\n    case Key.DSharp:\r\n      return note.octave * 12 + 3 + 12;\r\n    case Key.E:\r\n      return note.octave * 12 + 4 + 12;\r\n    case Key.F:\r\n      return note.octave * 12 + 5 + 12;\r\n    case Key.FSharp:\r\n      return note.octave * 12 + 6 + 12;\r\n    case Key.G:\r\n      return note.octave * 12 + 7 + 12;\r\n    case Key.GSharp:\r\n      return note.octave * 12 + 8 + 12;\r\n    case Key.A:\r\n      return note.octave * 12 + 9 + 12;\r\n    case Key.ASharp:\r\n      return note.octave * 12 + 10 + 12;\r\n    case Key.B:\r\n      return note.octave * 12 + 11 + 12;\r\n  }\r\n}\r\n\r\nexport function noteFromNumber(noteNumber: number): Note {\r\n  // 0 -> { key: C, octave: -1 }\r\n  const octave = Math.floor(noteNumber / 12) - 1;\r\n  switch (noteNumber % 12) {\r\n    case 0:\r\n      return { key: Key.C, octave };\r\n    case 1:\r\n      return { key: Key.CSharp, octave };\r\n    case 2:\r\n      return { key: Key.D, octave };\r\n    case 3:\r\n      return { key: Key.DSharp, octave };\r\n    case 4:\r\n      return { key: Key.E, octave };\r\n    case 5:\r\n      return { key: Key.F, octave };\r\n    case 6:\r\n      return { key: Key.FSharp, octave };\r\n    case 7:\r\n      return { key: Key.G, octave };\r\n    case 8:\r\n      return { key: Key.GSharp, octave };\r\n    case 9:\r\n      return { key: Key.A, octave };\r\n    case 10:\r\n      return { key: Key.ASharp, octave };\r\n    case 11:\r\n      return { key: Key.B, octave };\r\n    default:\r\n      // TODO: error\r\n      return { key: Key.C, octave: 0 };\r\n  }\r\n}\r\n\r\nexport function noteToString(note: Note) {\r\n  return note.key.toUpperCase() + note.octave;\r\n}\r\n\r\nexport function transpose(note: Note, n: number): Note {\r\n  return noteFromNumber(noteToNumber(note) + n);\r\n}\r\n","import { Key, Note, transpose } from \"./Note\";\r\n\r\ninterface KeyMap {\r\n  keys: string[];\r\n  firstNote: Note;\r\n}\r\n\r\nconst keyMaps: KeyMap[] = [\r\n  {\r\n    firstNote: { key: Key.C, octave: 3 },\r\n    keys: [\r\n      \"z\",\r\n      \"s\",\r\n      \"x\",\r\n      \"d\",\r\n      \"c\",\r\n      \"v\",\r\n      \"g\",\r\n      \"b\",\r\n      \"h\",\r\n      \"n\",\r\n      \"j\",\r\n      \"m\",\r\n      \",\",\r\n      \"l\",\r\n      \".\",\r\n      \";\",\r\n      \"/\",\r\n      \"\\\\\",\r\n      \"]\",\r\n    ],\r\n  },\r\n  {\r\n    firstNote: { key: Key.C, octave: 4 },\r\n    keys: [\r\n      \"q\",\r\n      \"2\",\r\n      \"w\",\r\n      \"3\",\r\n      \"e\",\r\n      \"r\",\r\n      \"5\",\r\n      \"t\",\r\n      \"6\",\r\n      \"y\",\r\n      \"7\",\r\n      \"u\",\r\n      \"i\",\r\n      \"9\",\r\n      \"o\",\r\n      \"0\",\r\n      \"p\",\r\n      \"@\",\r\n      \"^\",\r\n      \"[\",\r\n    ],\r\n  },\r\n  {\r\n    firstNote: { key: Key.A, octave: 5 },\r\n    keys: [\"Enter\"],\r\n  },\r\n];\r\n\r\nexport function keyboardEventToNote(\r\n  event: React.KeyboardEvent,\r\n  transposee: number,\r\n): Note | undefined {\r\n  if (event.repeat) return;\r\n  const keyMap = keyMaps.find(km => km.keys.includes(event.key));\r\n  if (!keyMap) return;\r\n  const index = keyMap.keys.indexOf(event.key);\r\n  return transpose(keyMap.firstNote, index + transposee);\r\n}\r\n","import { InstrumentName } from \"soundfont-player\";\r\n\r\nexport const instruments: InstrumentName[] = [\r\n  \"accordion\",\r\n  \"acoustic_bass\",\r\n  \"acoustic_grand_piano\",\r\n  \"acoustic_guitar_nylon\",\r\n  \"acoustic_guitar_steel\",\r\n  \"agogo\",\r\n  \"alto_sax\",\r\n  \"applause\",\r\n  \"bagpipe\",\r\n  \"banjo\",\r\n  \"baritone_sax\",\r\n  \"bassoon\",\r\n  \"bird_tweet\",\r\n  \"blown_bottle\",\r\n  \"brass_section\",\r\n  \"breath_noise\",\r\n  \"bright_acoustic_piano\",\r\n  \"celesta\",\r\n  \"cello\",\r\n  \"choir_aahs\",\r\n  \"church_organ\",\r\n  \"clarinet\",\r\n  \"clavinet\",\r\n  \"contrabass\",\r\n  \"distortion_guitar\",\r\n  \"drawbar_organ\",\r\n  \"dulcimer\",\r\n  \"electric_bass_finger\",\r\n  \"electric_bass_pick\",\r\n  \"electric_grand_piano\",\r\n  \"electric_guitar_clean\",\r\n  \"electric_guitar_jazz\",\r\n  \"electric_guitar_muted\",\r\n  \"electric_piano_1\",\r\n  \"electric_piano_2\",\r\n  \"english_horn\",\r\n  \"fiddle\",\r\n  \"flute\",\r\n  \"french_horn\",\r\n  \"fretless_bass\",\r\n  \"fx_1_rain\",\r\n  \"fx_2_soundtrack\",\r\n  \"fx_3_crystal\",\r\n  \"fx_4_atmosphere\",\r\n  \"fx_5_brightness\",\r\n  \"fx_6_goblins\",\r\n  \"fx_7_echoes\",\r\n  \"fx_8_scifi\",\r\n  \"glockenspiel\",\r\n  \"guitar_fret_noise\",\r\n  \"guitar_harmonics\",\r\n  \"gunshot\",\r\n  \"harmonica\",\r\n  \"harpsichord\",\r\n  \"helicopter\",\r\n  \"honkytonk_piano\",\r\n  \"kalimba\",\r\n  \"koto\",\r\n  \"lead_1_square\",\r\n  \"lead_2_sawtooth\",\r\n  \"lead_3_calliope\",\r\n  \"lead_4_chiff\",\r\n  \"lead_5_charang\",\r\n  \"lead_6_voice\",\r\n  \"lead_7_fifths\",\r\n  \"lead_8_bass__lead\",\r\n  \"marimba\",\r\n  \"melodic_tom\",\r\n  \"music_box\",\r\n  \"muted_trumpet\",\r\n  \"oboe\",\r\n  \"ocarina\",\r\n  \"orchestra_hit\",\r\n  \"orchestral_harp\",\r\n  \"overdriven_guitar\",\r\n  \"pad_1_new_age\",\r\n  \"pad_2_warm\",\r\n  \"pad_3_polysynth\",\r\n  \"pad_4_choir\",\r\n  \"pad_5_bowed\",\r\n  \"pad_6_metallic\",\r\n  \"pad_7_halo\",\r\n  \"pad_8_sweep\",\r\n  \"pan_flute\",\r\n  \"percussive_organ\",\r\n  \"piccolo\",\r\n  \"pizzicato_strings\",\r\n  \"recorder\",\r\n  \"reed_organ\",\r\n  \"reverse_cymbal\",\r\n  \"rock_organ\",\r\n  \"seashore\",\r\n  \"shakuhachi\",\r\n  \"shamisen\",\r\n  \"shanai\",\r\n  \"sitar\",\r\n  \"slap_bass_1\",\r\n  \"slap_bass_2\",\r\n  \"soprano_sax\",\r\n  \"steel_drums\",\r\n  \"string_ensemble_1\",\r\n  \"string_ensemble_2\",\r\n  \"synth_bass_1\",\r\n  \"synth_bass_2\",\r\n  \"synth_brass_1\",\r\n  \"synth_brass_2\",\r\n  \"synth_choir\",\r\n  \"synth_drum\",\r\n  \"synth_strings_1\",\r\n  \"synth_strings_2\",\r\n  \"taiko_drum\",\r\n  \"tango_accordion\",\r\n  \"telephone_ring\",\r\n  \"tenor_sax\",\r\n  \"timpani\",\r\n  \"tinkle_bell\",\r\n  \"tremolo_strings\",\r\n  \"trombone\",\r\n  \"trumpet\",\r\n  \"tuba\",\r\n  \"tubular_bells\",\r\n  \"vibraphone\",\r\n  \"viola\",\r\n  \"violin\",\r\n  \"voice_oohs\",\r\n  \"whistle\",\r\n  \"woodblock\",\r\n  \"xylophone\",\r\n];\r\n\r\nexport const defaultInstrument = \"acoustic_grand_piano\";\r\n","import { Note, noteFromNumber, noteToNumber } from \"./Note\";\r\n\r\nexport default function detect(notes: Note[]): string {\r\n  if (notes.length === 0) {\r\n    return \"N/A\";\r\n  }\r\n  const noteNumbers = notes.map(n => noteToNumber(n));\r\n  const baseNoteNumber = Math.min(...noteNumbers);\r\n  const baseNote = noteFromNumber(baseNoteNumber);\r\n  const first = detectOnce(notes);\r\n  const second = detectOnce(notes.filter(n => n.key !== baseNote.key));\r\n  if (first.score < second.score) {\r\n    return `${second.key}${second.label}/${baseNote.key} (${Math.ceil(\r\n      second.score * 100,\r\n    )}%)`;\r\n  }\r\n  return `${baseNote.key}${first.label} (${Math.ceil(first.score * 100)}%)`;\r\n}\r\n\r\nfunction detectOnce(notes: Note[]) {\r\n  const noteNumbers = notes.map(n => noteToNumber(n));\r\n  const baseNoteNumber = Math.min(...noteNumbers);\r\n  const baseNote = noteFromNumber(baseNoteNumber);\r\n  const structure = Array(11)\r\n    .fill(null)\r\n    .map((_, idx) => (idx + 1) as FormElement)\r\n    .filter(distance => {\r\n      return noteNumbers.some(n => (n - baseNoteNumber) % 12 === distance);\r\n    });\r\n\r\n  const estimated = (Object.keys(patterns) as (keyof typeof patterns)[]).map(\r\n    key => ({\r\n      label: key,\r\n      score: estimate(structure, patterns[key]),\r\n    }),\r\n  );\r\n\r\n  return {\r\n    key: baseNote.key,\r\n    ...estimated.reduce((x, y) => (x.score >= y.score ? x : y)),\r\n  };\r\n}\r\n\r\ntype FormElement = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11;\r\ntype Form = FormElement[];\r\n\r\nconst patterns: { [key: string]: Form } = {\r\n  \"5\": [7],\r\n  \"\": [4, 7],\r\n  m: [3, 7],\r\n  aug: [4, 8],\r\n  dim: [3, 6],\r\n  sus2: [2, 7],\r\n  sus4: [5, 7],\r\n  M7: [4, 7, 11],\r\n  m7: [3, 7, 10],\r\n  \"7\": [4, 7, 10],\r\n  \"7â­5\": [4, 6, 10],\r\n  \"7sus4\": [5, 7, 10],\r\n  mM7: [3, 7, 11],\r\n  dim7: [3, 6, 11],\r\n  Ã¸7: [3, 6, 10],\r\n  M9: [2, 4, 7, 11],\r\n  m9: [2, 3, 7, 10],\r\n  M11: [2, 4, 5, 7, 11],\r\n  m11: [2, 3, 5, 7, 10],\r\n  M13: [2, 4, 6, 7, 9, 11],\r\n  m13: [2, 3, 5, 7, 9, 10],\r\n};\r\n\r\nfunction estimate(structure: Form, chord: Form): number {\r\n  const allFormElements = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] as Form;\r\n  return allFormElements\r\n    .map(distance => {\r\n      if (structure.includes(distance)) {\r\n        if (chord.includes(distance))\r\n          return 1 / allFormElements.filter(k => chord.includes(k)).length;\r\n        return -1 / allFormElements.filter(k => !chord.includes(k)).length;\r\n      }\r\n      return 0;\r\n    })\r\n    .reduce((x, y) => x + y);\r\n}\r\n","import React, { useState, useCallback } from \"react\";\nimport { instrument, Player, InstrumentName } from \"soundfont-player\";\nimport { keyboardEventToNote } from \"./Keyboard\";\nimport { Note, noteToNumber, noteFromNumber, noteToString } from \"./Note\";\nimport { defaultInstrument, instruments } from \"./Instrument\";\nimport detect from \"./Chord\";\n\nlet player: Player | null = null;\n\ninterface PlayingNotesMap {\n  [key: string]: { stop: () => void }[] | undefined;\n}\n\nexport default function App() {\n  const [logs, setLogs] = useState<string[]>([]);\n  const [playingNotesMap, setPlayingNotesMap] = useState<PlayingNotesMap>({});\n  const [instrument, setInstrument] = useState<InstrumentName>(\n    defaultInstrument,\n  );\n  const [release, setRelease] = useState<number>(10);\n  const [transpose, setTranspose] = useState<number>(0);\n  const handleKeyDown = useCallback(\n    createHandleKeyDown(\n      logs,\n      setLogs,\n      playingNotesMap,\n      setPlayingNotesMap,\n      release,\n      transpose,\n    ),\n    [logs, playingNotesMap],\n  );\n  const handleKeyUp = useCallback(\n    createHandleKeyUp(\n      logs,\n      setLogs,\n      playingNotesMap,\n      setPlayingNotesMap,\n      transpose,\n    ),\n    [logs, playingNotesMap],\n  );\n  const handleSelect = useCallback(createHandleSelect(setInstrument), []);\n  const handleRelease = useCallback(createHandleTranspose(setRelease), []);\n  const handleTranspose = useCallback(createHandleTranspose(setTranspose), []);\n  const handleActivate = useCallback(createActivate(instrument), [instrument]);\n  const playingNotes = Object.keys(playingNotesMap)\n    .filter(key => playingNotesMap[key])\n    .map(noteNumber => noteFromNumber(Number(noteNumber)));\n  return (\n    <div onKeyDown={handleKeyDown} onKeyUp={handleKeyUp} tabIndex={0}>\n      <div>\n        Instrument:\n        <select onChange={handleSelect} defaultValue={defaultInstrument}>\n          {instruments.map((instrument, idx) => (\n            <option key={idx} value={instrument}>\n              {instrument\n                .split(\"_\")\n                .map(s => (s ? s[0].toUpperCase() + s.substr(1) : s))\n                .join(\" \")}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        Transpose:\n        <input onChange={handleTranspose} defaultValue={String(transpose)} />\n      </div>\n      <div>\n        Release:{\" \"}\n        <input onChange={handleRelease} defaultValue={String(release)} />\n      </div>\n      <div>\n        <button onClick={handleActivate}>Start</button>\n      </div>\n      <p>\n        Playing:\n        {playingNotes.map(n => noteToString(n)).join(\", \") || \"-\"}\n      </p>\n      <p>\n        Guess:\n        {detect(playingNotes)}\n      </p>\n    </div>\n  );\n}\n\nfunction createHandleSelect(\n  setInstrument: React.Dispatch<React.SetStateAction<InstrumentName>>,\n) {\n  return (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setInstrument(event.target.value as InstrumentName);\n  };\n}\n\nfunction createHandleTranspose(\n  setTranspose: React.Dispatch<React.SetStateAction<number>>,\n) {\n  return (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTranspose(Number(event.target.value));\n  };\n}\n\nfunction createHandleKeyDown(\n  logs: string[],\n  setLogs: React.Dispatch<React.SetStateAction<string[]>>,\n  playingNotesMap: PlayingNotesMap,\n  setPlayingNotesMap: React.Dispatch<React.SetStateAction<PlayingNotesMap>>,\n  release: number,\n  transpose: number,\n) {\n  return async (event: React.KeyboardEvent) => {\n    const note = keyboardEventToNote(event, transpose);\n    if (note) {\n      console.log(noteToString(note));\n      const playingNote = await play(note, logs, release, setLogs);\n      if (!playingNote) {\n        return;\n      }\n      setPlayingNotesMap({\n        ...playingNotesMap,\n        [noteToNumber(note)]: [\n          ...(playingNotesMap[noteToNumber(note)] || []),\n          { stop: () => playingNote.stop() },\n        ],\n      });\n    }\n  };\n}\n\nfunction createHandleKeyUp(\n  logs: string[],\n  setLogs: React.Dispatch<React.SetStateAction<string[]>>,\n  playingNotesMap: PlayingNotesMap,\n  setPlayingNotesMap: React.Dispatch<React.SetStateAction<PlayingNotesMap>>,\n  transpose: number,\n) {\n  return async (event: React.KeyboardEvent) => {\n    const note = keyboardEventToNote(event, transpose);\n    if (note) {\n      console.log(noteToString(note));\n      await stop(\n        note,\n        playingNotesMap[noteToNumber(note)] || [],\n        logs,\n        setLogs,\n      );\n      setPlayingNotesMap({\n        ...playingNotesMap,\n        [noteToNumber(note)]: undefined,\n      });\n    }\n  };\n}\n\nasync function play(\n  note: Note,\n  logs: string[],\n  release: number,\n  setLogs: React.Dispatch<React.SetStateAction<string[]>>,\n) {\n  setLogs([`${noteToString(note)} - PLAY`, ...logs.splice(0, 16)]);\n  if (!player) {\n    return;\n  }\n  return player.play(noteToString(note), undefined, { release });\n}\n\nasync function stop(\n  note: Note,\n  playingNotes: { stop: () => void }[],\n  logs: string[],\n  setLogs: React.Dispatch<React.SetStateAction<string[]>>,\n) {\n  setLogs([`${noteToString(note)} - STOP`, ...logs.splice(0, 16)]);\n  playingNotes.forEach(pn => pn.stop());\n}\n\nfunction createActivate(instrumentName: InstrumentName) {\n  return async () => {\n    player = await instrument(new AudioContext() as any, instrumentName);\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}